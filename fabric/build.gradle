plugins {
    id 'ml-loader'
    id 'fabric-loom' version '1.6-SNAPSHOT'
}

base {
    archivesName = "${mod_id}-fabric-1.20.3-1.20.4"
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}+${minecraft_version}"

    modImplementation "net.xstopho.resourcelibrary:resourcelibrary-fabric:${resource_library}"

    // Runtime Mods
    modRuntimeOnly "maven.modrinth:emi:${emi_version}+fabric"
}

loom {
    var aw = project(":common").file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) accessWidenerPath.set(aw)

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            programArgs('--username', 'Dev')
            runDir("runs/client")
        }
        datagen {
            inherit client
            name "Fabric Datagen"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${mod_id}"

            runDir "build/datagen"
        }
    }
}

// Loader Specific Settings
publishMods {
    file = remapJar.archiveFile
    modLoaders.addAll("fabric", "quilt")

    modrinth { minecraftVersions.addAll('1.20', '1.20.1', '1.20.2')}
    curseforge { minecraftVersions.addAll('1.20', '1.20.1', '1.20.2')}
}